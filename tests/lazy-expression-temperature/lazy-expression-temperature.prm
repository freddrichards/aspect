# Basic parameters file for using a function expression to define the
# initial temperature structure using (? : ) syntax for if-else conditions.
# 2D, Dimensional, Boussinesq, Simple Material Model

# Dimension, end-time (years) and output directory
# Only does zeroth time-step to show that initial condition works
set Dimension                              = 2
set Use years in output instead of seconds = true
set Start time                             = 0
set End time                               = 0
set Output directory                       = output-lazy-expression

# Parameters Related to the Solver and Pressure Normalization
# Normalization of the temperature
set Pressure normalization                 = surface
set Surface pressure                       = 0  

# Default values are 1e-12 and 1e-7
# Using larger values so this will just define initial condition and exit
subsection Solver parameters
  set Temperature solver tolerance         = 1e-6
  
  subsection Stokes solver parameters
    set Linear solver tolerance            = 1e-3
  end
end


# FORM OF THE EQUATIONS TO USE
# These two choices are the same as using the Boussinesq approximation
subsection Formulation
  set Formulation = custom
  set Mass conservation = incompressible
  set Temperature equation = reference density profile
end

# GEOMETRY AND MODEL SIZE
# Want a 2D box 5000 km wide by 1000 km deep. In METERS  5e6 x 1e6 
# The variable repetitions divides the whole domain into 5 boxes (1000 x 1000 km)
# as the 0th level mesh refinement: this is needed so elements are squares
# and not elongated rectangles.

subsection Geometry model
  set Model name = box

  subsection Box
    set X extent = 5e6
    set Y extent = 1e6
    set X repetitions = 5
    set Y repetitions = 1
  end
end

# MESH INFORMATION
# Refine the upper 150 km of the mesh so lithosphere structure is resolved.
# For depth of 1000km, level =7  gives element size of 1000/(2^7) = 7.8125 km
# Total refinements = initial global + intial adaptive = 7
# Function expression asks: if ((ymax-y<=LITH) then refinement level = 7, else
# refinement level = 0
subsection Mesh refinement
  set Initial global refinement                = 3
  set Minimum refinement level		           = 3
  set Initial adaptive refinement              = 4
  set Time steps between mesh refinement       = 1
  set Strategy 					= minimum refinement function
  subsection Minimum refinement function
    set Coordinate system   = cartesian
    set Variable names      = x,y
    set Function constants = YMAX=1e6,LITH=1.5e5
    set Function expression = ((YMAX-y<=LITH) ? 7: 0)
  end
end

# INITIAL TEMPERATURE  
# Half-space cooling model increasing with age from x>0 to xtr
# For x>xtr, half-space cooling model with a fixed age.
# Note, we use 1-erfc instead of erf because the muparser in dealii 
# only knows about erfc. Also, we need to use ymax-y since y=0 at the
# bottom of the box

subsection Initial temperature model
   set Model name = function
   subsection Function
      set Variable names = x,y
      set Function constants = ymax=1.0e6, xtrm=2.200e6, vsub=7.927e-10, \
			       ageop=9.46e14, Tm=1673, Ts=273, kappa=1e-6 
      set Function expression = (((x>0.0) && (x<=xtrm)) ? \
             (Ts + (Tm-Ts)*(1-erfc((ymax-y)/(2*sqrt(kappa*(x/vsub)))))) : \
	  (x>xtrm) ? (Ts + (Tm-Ts)*(1-erfc((ymax-y)/(2*sqrt(kappa*ageop))))) :\
             (Tm) ) 
   end
end 
 
# TEMPERATURE/FLUX BOUNDARY CONDITIONS
# Set boundary types and values for temperature
# Default is zero-flux (keep for sidewalls), 
# so only need set top and bottom to fixed temperature

subsection Boundary temperature model
  set Fixed temperature boundary indicators = bottom, top
  set List of model names = box

  subsection Box
    set Bottom temperature = 1673
    set Left temperature   = 0
    set Right temperature  = 0
    set Top temperature    = 273
  end
end

# VELOCITY BOUNDARY CONDITIONS
# Free-slip on all sides (tangential velocity V-perp=0, dV/dn=0)

subsection Boundary velocity model
  set Tangential velocity boundary indicators = left, right, bottom, top
end

# BASIC DIMENSIONAL *MATERIAL* MODEL FOR BOUSSINESQ APPROXIMATION
# Material Properties
# Reference density 3300. Units: kg/m^3.
# The value of the specific heat 1250. Units: J/kg/K.
# The reference temperature 1400. Units: C (or K-273).
# The value of the thermal conductivity 4.125. Units: W/m/K.
# The value of the thermal expansion coefficient 2e-5. Units: 1/K.
# The value of the constant viscosity. 1e21 Units: kg/m/s = Pa-s.
# Note, rho-ref=3300 with Tref=1400, will give rho=3390 at T=0

subsection Material model
  set Model name = simple

  subsection Simple model
    set Reference density             = 3300  
    set Reference specific heat       = 1250
    set Reference temperature         = 1400
    set Thermal conductivity          = 4.125
    set Thermal expansion coefficient = 2e-5
    set Viscosity                     = 1e21
  end
end

# GRAVITY
# Constant gravity pointed in the vertical direction
# Note, this should change for compressible, spherical models.

subsection Gravity model
  set Model name = vertical

  subsection Vertical
    set Magnitude = 9.81   
  end
end

# INFORMATION ON OUTPUT TO BE CREATED
subsection Postprocess
  set List of postprocessors = visualization, velocity statistics, temperature statistics

  subsection Visualization
    set Output format                 = gnuplot
    set Time between graphical output = 1e6
    set Number of grouped files       = 0
  end
end

